name: Deploy to Staging

on:
  push:
    branches:
      - staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '10.8.0'

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Next.js build cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: pnpm install

      - name: Build app
        run: pnpm build
        env:
          NODE_ENV: staging

      - name: Debug - Check if secrets are set
        run: |
          echo "STAGING_AWS_ACCESS_KEY_ID is set: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID != '' }}"
          echo "STAGING_AWS_SECRET_ACCESS_KEY is set: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY != '' }}"
          echo "STAGING_AWS_REGION is set: ${{ secrets.STAGING_AWS_REGION != '' }}"
          echo "STAGING_AWS_S3_BUCKET_NAME is set: ${{ secrets.STAGING_AWS_S3_BUCKET_NAME != '' }}"
          echo "STAGING_CLOUDFRONT_DISTRIBUTION_ID is set: ${{ secrets.STAGING_CLOUDFRONT_DISTRIBUTION_ID != '' }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.STAGING_AWS_REGION }}

      - name: Deploy to S3
        run: |
          aws s3 sync out/ s3://${{ secrets.STAGING_AWS_S3_BUCKET_NAME }} --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.STAGING_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
